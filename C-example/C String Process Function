int StrLen(const char *pStr);
void StrCpy(char *pStrDest, const char *pStrSrc);
bool StrCmp(const char *pStr1, const char *pStr2);
char* StrCat(char *pStrDest, const char *pStrSrc);

int main()
{
	char sz[255] = "abcz";
	char sz1[255] = "0123456789";

	cout << StrLen(sz) << endl;
	cout << StrLen(sz1) << endl;

	/*cout << "********before StrCpy**********" << endl;
	cout << sz << endl << sz1 << endl;

	cout << "********after StrCpy**********" << endl;
	StrCpy(sz, sz1);
	cout << sz << endl << sz1 << endl;*/

	//cout<<StrCmp(sz, sz1)<<endl;

	cout << "********before StrCat**********" << endl;
	cout << sz << endl << sz1 << endl;

	cout << "********after StrCat**********" << endl;
	StrCat(sz, sz1);
	cout << sz << endl << sz1 << endl;

	return 0;
}

int StrLen(const char *pStr)
{
	int nLen = -1;
	if (NULL != pStr)
	{
		nLen = 0;
		for (; '\0' != pStr[nLen]; nLen++);
	}
	return nLen;
}

void StrCpy(char *pStrDest, const char *pStrSrc)
{
	if (NULL != pStrDest && NULL != pStrSrc)
	{
		int i = 0;
		for (i = 0; '\0' != pStrSrc[i]; i++)
		{
			pStrDest[i] = pStrSrc[i];
		}
	}
}

bool StrCmp(const char *pStr1, const char *pStr2)
{
	if (NULL != pStr1 || NULL != pStr2)
	{
		int i = 0;
		for (i = 0; '\0' != pStr1[i] || '\0' != pStr2[i]; i++)
		{
			if (pStr1[i] != pStr2[i])
			{
				return false;
			}
		}
		return true;
	}
	return false;
}

char* StrCat(char *pStrDest, const char *pStrSrc)
{
	if (NULL != pStrDest && NULL != pStrSrc)
	{
		while ('\0' != *pStrDest++);
		pStrDest--;

		while ('\0' != *pStrSrc)
		{
			*pStrDest++ = *pStrSrc++;
		}
		*pStrDest = '\0';
	}

	return pStrDest;
}
